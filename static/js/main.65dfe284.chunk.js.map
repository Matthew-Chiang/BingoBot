{"version":3,"sources":["logo.svg","components/Square.js","components/Board.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Square","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","marked","_this2","react_default","a","createElement","className","onClick","setState","value","Component","Board","i","src_components_Square","window","location","reload","Grid","Row","Col","xs","xsOffset","Button","bsSize","block","handleReset","renderSquare","React","Home","uploaded","handleUploadImage","bind","assertThisInitialized","files","data","FormData","append","myHeaders","Headers","fetch","method","headers","body","setTimeout","console","log","es","multiple","accept","onDrop","src_components_Board","App","src_components_Home","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.65dfe284.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport './Square.css'\n\nclass Square extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      marked : false\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <button className={this.state.marked ? \"marked square\" : \"square\"}\n         onClick={() => this.setState({marked:!this.state.marked})} >\n          {this.props.value}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Square;\n","import React, { Component } from 'react';\nimport { Button, Grid, Row, Col } from 'react-bootstrap';\nimport Square from './Square'\nimport './Board.css'\nimport AudioRecorder from 'react-audio-recorder';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  renderSquare(i) {\n    return <Square value={i} />;\n  }\n\n  handleReset(){\n    window.location.reload();\n  }\n\n  render() {\n    const status = 'BINGO';\n\n    return (\n      <Grid>\n        <Row>\n          <Col xs={4} xsOffset={4}><Button bsSize=\"large\" block onClick={this.handleReset}>Reset</Button></Col>\n        </Row>\n        <Row>\n          <div className=\"title\">{status}</div>\n        </Row>\n        <Row>\n          <Col xs={2} xsOffset={1}> {this.renderSquare(7)} </Col>\n          <Col xs={2}> {this.renderSquare(21)} </Col>\n          <Col xs={2}> {this.renderSquare(41)} </Col>\n          <Col xs={2}> {this.renderSquare(54)} </Col>\n          <Col xs={2}> {this.renderSquare(65)} </Col>\n        </Row>\n        <Row>\n          <Col xs={2} xsOffset={1}> {this.renderSquare(1)} </Col>\n          <Col xs={2}> {this.renderSquare(30)} </Col>\n          <Col xs={2}> {this.renderSquare(33)} </Col>\n          <Col xs={2}> {this.renderSquare(53)} </Col>\n          <Col xs={2}> {this.renderSquare(74)} </Col>\n        </Row>\n        <Row>\n          <Col xs={2} xsOffset={1}> {this.renderSquare(9)} </Col>\n          <Col xs={2}> {this.renderSquare(16)} </Col>\n          <Col xs={2}> {this.renderSquare(35)} </Col>\n          <Col xs={2}> {this.renderSquare(47)} </Col>\n          <Col xs={2}> {this.renderSquare(71)} </Col>\n        </Row>\n        <Row>\n          <Col xs={2} xsOffset={1}> {this.renderSquare(8)} </Col>\n          <Col xs={2}> {this.renderSquare(29)} </Col>\n          <Col xs={2}> {this.renderSquare(38)} </Col>\n          <Col xs={2}> {this.renderSquare(58)} </Col>\n          <Col xs={2}> {this.renderSquare(61)} </Col>\n        </Row>\n        <Row>\n          <Col xs={2} xsOffset={1}> {this.renderSquare(11)} </Col>\n          <Col xs={2}> {this.renderSquare(24)} </Col>\n          <Col xs={2}> {this.renderSquare(44)} </Col>\n          <Col xs={2}> {this.renderSquare(47)} </Col>\n          <Col xs={2}> {this.renderSquare(75)} </Col>\n        </Row>\n        <Row>\n        </Row>\n      </Grid>\n    );\n  }\n}\n\nexport default Board;\n","import React, { Component } from 'react';\nimport { Image, Grid, Row, Col } from 'react-bootstrap';\nimport Dropzone from 'react-dropzone'\nimport './Home.css'\nimport Board from './Board'\n\nclass Home extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      uploaded: false\n    };\n\n    this.handleUploadImage = this.handleUploadImage.bind(this);\n  }\n\n  handleUploadImage(files){\n    const data = new FormData();\n    data.append('file', files[0]);\n\n    var myHeaders = new Headers();\n\n    myHeaders.append('enctype', 'multipart/form-data');\n\n\n    fetch('/upload', {\n      method: 'POST',\n      headers: myHeaders,\n      body: data\n    })\n    setTimeout(\n      () => {\n        console.log('Hello after 4 seconds');\n        this.setState({uploaded:true});\n      },\n      2 * 1000\n      );\n  }\n\n  render() {\n    return (\n      <Grid>\n        <Row>\n          <Col xs={12}><h1 className=\"centerText\">WELCOME TO BINGO BOT</h1></Col>\n        </Row>\n        <Row>\n          <Col xs={12}><h5 className=\"centerText\">Please upload image of bingo sheet</h5></Col>\n        </Row>\n        <Row>\n          <Col xs={12}> <Dropzone\n                        className=\"dropZone\"\n                        multiple={false}\n                        accept=\"\\/*\"\n                        onDrop={this.handleUploadImage.bind(this)}>\n                          Drop File Here</Dropzone> </Col>\n        </Row>\n        <Row>\n          {this.state.uploaded == true &&\n            <Board />\n          }\n        </Row>\n      </Grid>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from './components/Home'\nimport Board from './components/Board'\n\nclass App extends Component {\n  render() {\n    return (\n      <Home />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}